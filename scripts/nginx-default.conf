# This is provided for the instance in case https is needed outside of the
# docker-compose. You can move this file to /etc/nginx/conf.d/default.conf
# and then bring up nginx (sudo service nginx start)

server {
  listen                *:80;
  server_name           localhost;

  client_max_body_size 8000M;
  client_body_buffer_size 8000M;
  client_body_timeout 120;

  add_header X-Clacks-Overhead "GNU Terry Pratchett";
  add_header X-Clacks-Overhead "GNU Terry Pratchet";
  add_header Access-Control-Allow-Origin *;
  add_header 'Access-Control-Allow-Credentials' 'true';
  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
  add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

  root    /var/www/html;
  index   index.html
  try_files   $uri /index.html;
}

server {

        listen 443;
        server_name localhost;

        client_max_body_size 8000M;
        client_body_buffer_size 8000M;

        ssl on;
        #ssl_certificate /etc/letsencrypt/live/singularity-hub.org/fullchain.pem;
        ssl_certificate /etc/ssl/certs/chained.pem;
        ssl_certificate_key /etc/ssl/private/domain.key;
        #ssl_certificate_key /etc/letsencrypt/live/singularity-hub.org/privkey.pem;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
        ssl_session_cache shared:SSL:50m;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_prefer_server_ciphers on;

        root    /var/www/html;
        index   index.html
        try_files   $uri /index.html;
}
