db:
  image: postgres
  environment:
   - POSTGRES_HOST_AUTH_METHOD=trust

uwsgi:
  restart: always
  image: quay.io/vanessa/sregistry
  volumes:
    - .:/code
    - ./static:/var/www/static
    - ./images:/var/www/images
    # uncomment for PAM auth
    #- /etc/passwd:/etc/passwd 
    #- /etc/shadow:/etc/shadow
  links:
    - minio
    - redis
    - db

nginx:
  restart: always
  image: quay.io/vanessa/sregistry_nginx
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    - ./uwsgi_params.par:/etc/nginx/uwsgi_params.par:ro
    - /etc/ssl/certs:/etc/ssl/certs:ro
    - /etc/ssl/private:/etc/ssl/private:ro
  volumes_from:
    - uwsgi
  links:
    - uwsgi
    - db

redis:
  restart: always
  image: redis:latest

scheduler:
  image: quay.io/vanessa/sregistry
  command: python /code/manage.py rqscheduler
  volumes:
    - .:/code
  volumes_from:
    - uwsgi
  env_file:
    - ./.minio-env
  links:
    - minio
    - redis
    - db

worker:
  image: quay.io/vanessa/sregistry
  command: python /code/manage.py rqworker default
  volumes:
    - .:/code
  volumes_from:
    - uwsgi
  env_file:
    - ./.minio-env
  links:
    - minio
    - redis
    - db

minio:
  image: minio/minio
  volumes:
    - ./minio-images:/images
    - /etc/ssl/certs/chained.pem:/root/.minio/certs/public.crt:ro
    - /etc/ssl/private/private.key:/root/.minio/certs/private.key:ro
  env_file:
   - ./.minio-env
  ports:
   - "9000:9000"  
  command: ["server", "images"]
